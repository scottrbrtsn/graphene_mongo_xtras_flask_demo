version: '3.7'
services:
    dev:
        build:
            context: ./flask
            dockerfile: Dockerfile
        container_name: 'api-dev'
        env_file:
            - api.env
        environment:
            - FLASK_ENV=development
            - FLASK_APP=/graphene_mongo_xtras_flask_demo/graphene_mongo_xtras_flask_demo/app.py
        command: ["/root/.local/bin/poetry", "run", "flask", "run", "--host=0.0.0.0"]
        ports:
            - 5000:5000
        volumes: 
            - $PWD/flask/graphene_mongo_xtras_flask_demo/:/graphene_mongo_xtras_flask_demo/graphene_mongo_xtras_flask_demo
    test:
        build:
            context: ./nginx
            dockerfile: Dockerfile
        container_name: 'api'
        environment:
            - FLASK_ENV=production
            - VIRTUAL_ENV=/apiapp/.venv
        env_file:
            - api.env
        expose:
            - 8080
        volumes: 
            - $PWD/flask:/app

    mongodb:
        image: mongo:4.2.1
        container_name: "mongodb"
        # ports:
            # - 27017:27017
            # - 27018:27018
            # - 27019:27019
        env_file:
            - mongo.env
        volumes:
            - $PWD/mongodb:/data/db
            - $PWD/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh
    
    mongo_express:
        image: mongo-express:0.49
        container_name: "mongo-express"
        restart: always
        env_file:
            - $PWD/mongo_express.env
        ports:
            - 8082:8081
        depends_on:
            - mongodb

    nginx:
        build:
            context: ./flask
            dockerfile: Dockerfile
        container_name: 'nginx'
        restart: always
        ports:
            - 80:80

